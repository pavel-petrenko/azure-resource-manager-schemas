{
  "id": "https://schema.management.azure.com/schemas/2024-11-01-preview/Microsoft.ContainerInstance.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.ContainerInstance",
  "description": "Microsoft ContainerInstance Resource Types",
  "resourceDefinitions": {
    "containerGroupProfiles": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2024-11-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "The resource location."
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
              "minLength": 1,
              "maxLength": 63
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "ContainerGroupProfile name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerGroupProfileProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The container group profile properties"
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ContainerInstance/containerGroupProfiles"
          ]
        },
        "zones": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The zones for the container group."
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ContainerInstance/containerGroupProfiles"
    },
    "containerGroups": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2024-11-01-preview"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerGroupIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Identity for the container group."
        },
        "location": {
          "type": "string",
          "description": "The resource location."
        },
        "name": {
          "type": "string",
          "description": "The name of the container group."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerGroupPropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The container group properties"
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ContainerInstance/containerGroups"
          ]
        },
        "zones": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The zones for the container group."
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ContainerInstance/containerGroups"
    },
    "ngroups": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2024-11-01-preview"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/NGroupIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Identity for the NGroup."
        },
        "location": {
          "type": "string",
          "description": "The resource location."
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
              "minLength": 1,
              "maxLength": 63
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The NGroups name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/NGroupProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the properties of the NGroups resource."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ContainerInstance/ngroups"
          ]
        },
        "zones": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The zones for the container group."
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ContainerInstance/ngroups"
    }
  },
  "definitions": {
    "ApiEntityReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/..."
        }
      },
      "description": "The API entity reference."
    },
    "ApplicationGateway": {
      "type": "object",
      "properties": {
        "backendAddressPools": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplicationGatewayBackendAddressPool"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of Application Gateway Backend Address Pools."
        },
        "resource": {
          "type": "string",
          "description": "The Application Gateway ARM resource Id."
        }
      },
      "description": "Application Gateway the CG profile will use to interact with CGs in a backend pool"
    },
    "ApplicationGatewayBackendAddressPool": {
      "type": "object",
      "properties": {
        "resource": {
          "type": "string",
          "description": "The application gateway backend address pool ARM resource Id."
        }
      },
      "description": "NGroups application gateway backend address pool"
    },
    "AzureFileVolume": {
      "type": "object",
      "properties": {
        "readOnly": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The flag indicating whether the Azure File shared mounted as a volume is read-only."
        },
        "shareName": {
          "type": "string",
          "description": "The name of the Azure File share to be mounted as a volume."
        },
        "storageAccountKey": {
          "type": "string",
          "description": "The storage account access key used to access the Azure File share."
        },
        "storageAccountKeyReference": {
          "type": "string",
          "description": "The reference to the storage account access key used to access the Azure File share."
        },
        "storageAccountName": {
          "type": "string",
          "description": "The name of the storage account that contains the Azure File share."
        }
      },
      "required": [
        "shareName",
        "storageAccountName"
      ],
      "description": "The properties of the Azure File volume. Azure File shares are mounted as volumes."
    },
    "ConfidentialComputeProperties": {
      "type": "object",
      "properties": {
        "ccePolicy": {
          "type": "string",
          "description": "The base64 encoded confidential compute enforcement policy"
        }
      },
      "description": "The properties for confidential container group"
    },
    "Container": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The user-provided name of the container instance."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The container instance properties."
        }
      },
      "required": [
        "name",
        "properties"
      ],
      "description": "A container instance."
    },
    "ContainerExec": {
      "type": "object",
      "properties": {
        "command": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The commands to execute within the container."
        }
      },
      "description": "The container execution command, for liveness or readiness probe"
    },
    "ContainerGroupDiagnostics": {
      "type": "object",
      "properties": {
        "logAnalytics": {
          "oneOf": [
            {
              "$ref": "#/definitions/LogAnalytics"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Container group log analytics information."
        }
      },
      "description": "Container group diagnostic information."
    },
    "ContainerGroupIdentity": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned",
                "None"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of identity used for the container group. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the container group."
        },
        "userAssignedIdentities": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/UserAssignedIdentities"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of user identities associated with the container group."
        }
      },
      "description": "Identity for the container group."
    },
    "ContainerGroupProfileProperties": {
      "type": "object",
      "properties": {
        "confidentialComputeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ConfidentialComputeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties for confidential container group"
        },
        "containers": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Container"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The containers within the container group."
        },
        "diagnostics": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerGroupDiagnostics"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Container group diagnostic information."
        },
        "encryptionProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The container group encryption properties."
        },
        "extensions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeploymentExtensionSpec"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "extensions used by virtual kubelet"
        },
        "imageRegistryCredentials": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ImageRegistryCredential"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The image registry credentials by which the container group is created from."
        },
        "initContainers": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InitContainerDefinition"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The init containers for a container group."
        },
        "ipAddress": {
          "oneOf": [
            {
              "$ref": "#/definitions/IpAddress"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "IP address for the container group."
        },
        "osType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Windows",
                "Linux"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The operating system type required by the containers in the container group."
        },
        "priority": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Regular",
                "Spot"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The priority of the container group."
        },
        "registeredRevisions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Registered revisions are calculated at request time based off the records in the table logs."
        },
        "restartPolicy": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Always",
                "OnFailure",
                "Never"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Restart policy for all containers within the container group. \n- `Always` Always restart\n- `OnFailure` Restart on failure\n- `Never` Never restart\n."
        },
        "revision": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Container group profile current revision number"
        },
        "securityContext": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecurityContextDefinition"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The security context for the container."
        },
        "shutdownGracePeriod": {
          "type": "string",
          "format": "date-time",
          "description": "Shutdown grace period for containers in a container group."
        },
        "sku": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "NotSpecified",
                "Standard",
                "Dedicated",
                "Confidential"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The SKU for a container group."
        },
        "timeToLive": {
          "type": "string",
          "format": "date-time",
          "description": "Post completion time to live for containers of a CG"
        },
        "useKrypton": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets Krypton use property."
        },
        "volumes": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Volume"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of volumes that can be mounted by containers in this container group."
        }
      },
      "description": "The container group profile properties"
    },
    "ContainerGroupProfileStub": {
      "type": "object",
      "properties": {
        "containerGroupProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/NGroupContainerGroupProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Container Group properties which can be set while creating or updating the NGroups."
        },
        "networkProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/NetworkProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A network profile for network settings of a ContainerGroupProfile. Used to manage load balancer and application gateway backend pools, specifically updating the IP addresses of CGs within the backend pool."
        },
        "resource": {
          "oneOf": [
            {
              "$ref": "#/definitions/ApiEntityReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The API entity reference."
        },
        "revision": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The revision of the CG profile is an optional property. If customer does not to provide a revision then NGroups will pickup the latest revision of CGProfile."
        },
        "storageProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/StorageProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Storage profile for storage related settings of a container group profile."
        }
      },
      "description": "The object that contains a reference to a Container Group Profile and it's other related properties."
    },
    "ContainerGroupPropertiesProperties": {
      "type": "object",
      "properties": {
        "confidentialComputeProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ConfidentialComputeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties for confidential container group"
        },
        "containers": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Container"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The containers within the container group."
        },
        "diagnostics": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerGroupDiagnostics"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Container group diagnostic information."
        },
        "dnsConfig": {
          "oneOf": [
            {
              "$ref": "#/definitions/DnsConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "DNS configuration for the container group."
        },
        "encryptionProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The container group encryption properties."
        },
        "extensions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeploymentExtensionSpec"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "extensions used by virtual kubelet"
        },
        "identityAcls": {
          "oneOf": [
            {
              "$ref": "#/definitions/IdentityAcls"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The access control levels of the identities."
        },
        "imageRegistryCredentials": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ImageRegistryCredential"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The image registry credentials by which the container group is created from."
        },
        "initContainers": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InitContainerDefinition"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The init containers for a container group."
        },
        "ipAddress": {
          "oneOf": [
            {
              "$ref": "#/definitions/IpAddress"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "IP address for the container group."
        },
        "osType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Windows",
                "Linux"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The operating system type required by the containers in the container group."
        },
        "priority": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Regular",
                "Spot"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The priority of the container group."
        },
        "restartPolicy": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Always",
                "OnFailure",
                "Never"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Restart policy for all containers within the container group. \n- `Always` Always restart\n- `OnFailure` Restart on failure\n- `Never` Never restart\n."
        },
        "secretReferences": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecretReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The secret references that will be referenced within the container group."
        },
        "sku": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "NotSpecified",
                "Standard",
                "Dedicated",
                "Confidential"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The SKU for a container group."
        },
        "subnetIds": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContainerGroupSubnetId"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The subnet resource IDs for a container group."
        },
        "volumes": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Volume"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of volumes that can be mounted by containers in this container group."
        }
      },
      "required": [
        "containers",
        "osType"
      ],
      "description": "The container group properties"
    },
    "ContainerGroupSubnetId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID of virtual network and subnet."
        },
        "name": {
          "type": "string",
          "description": "Friendly name for the subnet."
        }
      },
      "required": [
        "id"
      ],
      "description": "Container group subnet information."
    },
    "ContainerHttpGet": {
      "type": "object",
      "properties": {
        "httpHeaders": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HttpHeader"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The HTTP headers."
        },
        "path": {
          "type": "string",
          "description": "The path to probe."
        },
        "port": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The port number to probe."
        },
        "scheme": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "http",
                "https"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The scheme."
        }
      },
      "required": [
        "port"
      ],
      "description": "The container Http Get settings, for liveness or readiness probe"
    },
    "ContainerPort": {
      "type": "object",
      "properties": {
        "port": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The port number exposed within the container group."
        },
        "protocol": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "TCP",
                "UDP"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The protocol associated with the port."
        }
      },
      "required": [
        "port"
      ],
      "description": "The port exposed on the container instance."
    },
    "ContainerProbe": {
      "type": "object",
      "properties": {
        "exec": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerExec"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The container execution command, for liveness or readiness probe"
        },
        "failureThreshold": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The failure threshold."
        },
        "httpGet": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerHttpGet"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The container Http Get settings, for liveness or readiness probe"
        },
        "initialDelaySeconds": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The initial delay seconds."
        },
        "periodSeconds": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The period seconds."
        },
        "successThreshold": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The success threshold."
        },
        "timeoutSeconds": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The timeout seconds."
        }
      },
      "description": "The container probe, for liveness or readiness"
    },
    "ContainerProperties": {
      "type": "object",
      "properties": {
        "command": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The commands to execute within the container instance in exec form."
        },
        "environmentVariables": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EnvironmentVariable"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The environment variables to set in the container instance."
        },
        "image": {
          "type": "string",
          "description": "The name of the image used to create the container instance."
        },
        "livenessProbe": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerProbe"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The container probe, for liveness or readiness"
        },
        "ports": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContainerPort"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The exposed ports on the container instance."
        },
        "readinessProbe": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerProbe"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The container probe, for liveness or readiness"
        },
        "resources": {
          "oneOf": [
            {
              "$ref": "#/definitions/ResourceRequirements"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The resource requirements."
        },
        "securityContext": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecurityContextDefinition"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The security context for the container."
        },
        "volumeMounts": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VolumeMount"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The volume mounts available to the container instance."
        }
      },
      "required": [
        "image",
        "resources"
      ],
      "description": "The container instance properties."
    },
    "DeploymentExtensionSpec": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the extension."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DeploymentExtensionSpecProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Extension specific properties"
        }
      },
      "required": [
        "name"
      ],
      "description": "Extension sidecars to be added to the deployment."
    },
    "DeploymentExtensionSpecProperties": {
      "type": "object",
      "properties": {
        "extensionType": {
          "type": "string",
          "description": "Type of extension to be added."
        },
        "protectedSettings": {
          "type": "object",
          "properties": {},
          "description": "Protected settings for the extension."
        },
        "settings": {
          "type": "object",
          "properties": {},
          "description": "Settings for the extension."
        },
        "version": {
          "type": "string",
          "description": "Version of the extension being used."
        }
      },
      "required": [
        "extensionType",
        "version"
      ],
      "description": "Extension specific properties"
    },
    "DnsConfiguration": {
      "type": "object",
      "properties": {
        "nameServers": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The DNS servers for the container group."
        },
        "options": {
          "type": "string",
          "description": "The DNS options for the container group."
        },
        "searchDomains": {
          "type": "string",
          "description": "The DNS search domains for hostname lookup in the container group."
        }
      },
      "required": [
        "nameServers"
      ],
      "description": "DNS configuration for the container group."
    },
    "ElasticProfile": {
      "type": "object",
      "properties": {
        "containerGroupNamingPolicy": {
          "oneOf": [
            {
              "$ref": "#/definitions/ElasticProfileContainerGroupNamingPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Container Groups are named on a generic guid based naming scheme/policy. Customer can modify naming policy to add prefix to CG names during scale out operation."
        },
        "desiredCount": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maintainDesiredCount": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Flag that indicates whether desiredCount should be maintained when customer deletes SPECIFIC container groups (CGs) from the NGroups. In this case, new CGs will be created by NGroup to compensate for the specific deleted ones."
        }
      },
      "description": "Describes the elastic profile of the NGroup"
    },
    "ElasticProfileContainerGroupNamingPolicy": {
      "type": "object",
      "properties": {
        "guidNamingPolicy": {
          "oneOf": [
            {
              "$ref": "#/definitions/ElasticProfileContainerGroupNamingPolicyGuidNamingPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "description": "Container Groups are named on a generic guid based naming scheme/policy. Customer can modify naming policy to add prefix to CG names during scale out operation."
    },
    "ElasticProfileContainerGroupNamingPolicyGuidNamingPolicy": {
      "type": "object",
      "properties": {
        "prefix": {
          "type": "string",
          "description": "The prefix can be used when there are tooling limitations (e.g. on the Azure portal where CGs from multiple NGroups exist in the same RG). The prefix with the suffixed resource name must still follow Azure resource naming guidelines."
        }
      }
    },
    "EncryptionProperties": {
      "type": "object",
      "properties": {
        "identity": {
          "type": "string",
          "description": "The keyvault managed identity."
        },
        "keyName": {
          "type": "string",
          "description": "The encryption key name."
        },
        "keyVersion": {
          "type": "string",
          "description": "The encryption key version."
        },
        "vaultBaseUrl": {
          "type": "string",
          "description": "The keyvault base url."
        }
      },
      "required": [
        "keyName",
        "keyVersion",
        "vaultBaseUrl"
      ],
      "description": "The container group encryption properties."
    },
    "EnvironmentVariable": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the environment variable."
        },
        "secureValue": {
          "type": "string",
          "description": "The value of the secure environment variable."
        },
        "secureValueReference": {
          "type": "string",
          "description": "The reference of the secure environment variable."
        },
        "value": {
          "type": "string",
          "description": "The value of the environment variable."
        }
      },
      "required": [
        "name"
      ],
      "description": "The environment variable to set within the container instance."
    },
    "FileShare": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/FileShareProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resourceGroupName": {
          "type": "string"
        },
        "storageAccountName": {
          "type": "string"
        }
      },
      "description": "File shares that can be mounted on container groups."
    },
    "FileShareProperties": {
      "type": "object",
      "properties": {
        "shareAccessTier": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Cool",
                "Hot",
                "Premium",
                "TransactionOptimized"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium. Learn more at: https://learn.microsoft.com/en-us/rest/api/storagerp/file-shares/create?tabs=HTTP#shareaccesstier."
        },
        "shareAccessType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Shared",
                "Exclusive"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": " Specifies how Container Groups can access the Azure file share i.e. all CG will share same Azure file share or going to have exclusive file share."
        }
      }
    },
    "GitRepoVolume": {
      "type": "object",
      "properties": {
        "directory": {
          "type": "string",
          "description": "Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name."
        },
        "repository": {
          "type": "string",
          "description": "Repository URL"
        },
        "revision": {
          "type": "string",
          "description": "Commit hash for the specified revision."
        }
      },
      "required": [
        "repository"
      ],
      "description": "Represents a volume that is populated with the contents of a git repository"
    },
    "GpuResource": {
      "type": "object",
      "properties": {
        "count": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The count of the GPU resource."
        },
        "sku": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "K80",
                "P100",
                "V100"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The SKU of the GPU resource."
        }
      },
      "required": [
        "count",
        "sku"
      ],
      "description": "The GPU resource."
    },
    "HttpHeader": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The header name."
        },
        "value": {
          "type": "string",
          "description": "The header value."
        }
      },
      "description": "The HTTP header."
    },
    "IdentityAccessControl": {
      "type": "object",
      "properties": {
        "access": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "All",
                "System",
                "User"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The access level of the identity."
        },
        "identity": {
          "type": "string",
          "format": "arm-id",
          "description": "An identity."
        }
      },
      "description": "The access control for an identity"
    },
    "IdentityAcls": {
      "type": "object",
      "properties": {
        "acls": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IdentityAccessControl"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The access control levels for each identity."
        },
        "defaultAccess": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "All",
                "System",
                "User"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The default access level."
        }
      },
      "description": "The access control levels of the identities."
    },
    "ImageRegistryCredential": {
      "type": "object",
      "properties": {
        "identity": {
          "type": "string",
          "description": "The identity for the private registry."
        },
        "identityUrl": {
          "type": "string",
          "description": "The identity URL for the private registry."
        },
        "password": {
          "type": "string",
          "description": "The password for the private registry."
        },
        "passwordReference": {
          "type": "string",
          "description": "The reference for the private registry password."
        },
        "server": {
          "type": "string",
          "description": "The Docker image registry server without a protocol such as \"http\" and \"https\"."
        },
        "username": {
          "type": "string",
          "description": "The username for the private registry."
        }
      },
      "required": [
        "server"
      ],
      "description": "Image registry credential."
    },
    "InitContainerDefinition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name for the init container."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/InitContainerPropertiesDefinition"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The init container definition properties."
        }
      },
      "required": [
        "name",
        "properties"
      ],
      "description": "The init container definition."
    },
    "InitContainerPropertiesDefinition": {
      "type": "object",
      "properties": {
        "command": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The command to execute within the init container in exec form."
        },
        "environmentVariables": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EnvironmentVariable"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The environment variables to set in the init container."
        },
        "image": {
          "type": "string",
          "description": "The image of the init container."
        },
        "securityContext": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecurityContextDefinition"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The security context for the container."
        },
        "volumeMounts": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VolumeMount"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The volume mounts available to the init container."
        }
      },
      "description": "The init container definition properties."
    },
    "IpAddress": {
      "type": "object",
      "properties": {
        "autoGeneratedDomainNameLabelScope": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unsecure",
                "TenantReuse",
                "SubscriptionReuse",
                "ResourceGroupReuse",
                "Noreuse"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The value representing the security enum. The 'Unsecure' value is the default value if not selected and means the object's domain name label is not secured against subdomain takeover. The 'TenantReuse' value is the default value if selected and means the object's domain name label can be reused within the same tenant. The 'SubscriptionReuse' value means the object's domain name label can be reused within the same subscription. The 'ResourceGroupReuse' value means the object's domain name label can be reused within the same resource group. The 'NoReuse' value means the object's domain name label cannot be reused within the same resource group, subscription, or tenant."
        },
        "dnsNameLabel": {
          "type": "string",
          "description": "The Dns name label for the IP."
        },
        "ip": {
          "type": "string",
          "description": "The IP exposed to the public internet."
        },
        "ports": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Port"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of ports exposed on the container group."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Public",
                "Private"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies if the IP is exposed to the public internet or private VNET."
        }
      },
      "required": [
        "ports",
        "type"
      ],
      "description": "IP address for the container group."
    },
    "LoadBalancer": {
      "type": "object",
      "properties": {
        "backendAddressPools": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LoadBalancerBackendAddressPool"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of Load Balancer Backend Address Pools."
        }
      },
      "description": "LoadBalancer the CG profile will use to interact with CGs in a backend pool"
    },
    "LoadBalancerBackendAddressPool": {
      "type": "object",
      "properties": {
        "resource": {
          "type": "string",
          "description": "The Load Balancer backend address pool ARM resource Id."
        }
      },
      "description": "NGroups load balancer backend address pool"
    },
    "LogAnalytics": {
      "type": "object",
      "properties": {
        "logType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "ContainerInsights",
                "ContainerInstanceLogs"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The log type to be used."
        },
        "metadata": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata for log analytics."
        },
        "workspaceId": {
          "type": "string",
          "description": "The workspace id for log analytics"
        },
        "workspaceKey": {
          "type": "string",
          "description": "The workspace key for log analytics"
        },
        "workspaceResourceId": {
          "type": "string",
          "description": "The workspace resource id for log analytics"
        }
      },
      "required": [
        "workspaceId",
        "workspaceKey"
      ],
      "description": "Container group log analytics information."
    },
    "NetworkProfile": {
      "type": "object",
      "properties": {
        "applicationGateway": {
          "oneOf": [
            {
              "$ref": "#/definitions/ApplicationGateway"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Application Gateway the CG profile will use to interact with CGs in a backend pool"
        },
        "loadBalancer": {
          "oneOf": [
            {
              "$ref": "#/definitions/LoadBalancer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "LoadBalancer the CG profile will use to interact with CGs in a backend pool"
        }
      },
      "description": "A network profile for network settings of a ContainerGroupProfile. Used to manage load balancer and application gateway backend pools, specifically updating the IP addresses of CGs within the backend pool."
    },
    "NGroupCGPropertyContainer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "container name"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/NGroupCGPropertyContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "container properties"
        }
      },
      "description": "Container properties that can be provided with NGroups object."
    },
    "NGroupCGPropertyContainerProperties": {
      "type": "object",
      "properties": {
        "volumeMounts": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VolumeMount"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "description": "container properties"
    },
    "NGroupCGPropertyVolume": {
      "type": "object",
      "properties": {
        "azureFile": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureFileVolume"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of the Azure File volume. Azure File shares are mounted as volumes."
        },
        "name": {
          "type": "string",
          "description": "The name of the volume."
        }
      },
      "required": [
        "name"
      ],
      "description": "Contains information about the volumes that can be mounted by Containers in the Container Groups."
    },
    "NGroupContainerGroupProperties": {
      "type": "object",
      "properties": {
        "containers": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NGroupCGPropertyContainer"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Contains information about Container which can be set while creating or updating the NGroups."
        },
        "subnetIds": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContainerGroupSubnetId"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Contains information about Virtual Network Subnet ARM Resource"
        },
        "volumes": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NGroupCGPropertyVolume"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Contains information about the volumes that can be mounted by Containers in the Container Groups."
        }
      },
      "description": "Container Group properties which can be set while creating or updating the NGroups."
    },
    "NGroupIdentity": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned",
                "None"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of identity used for the NGroup. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the NGroup."
        },
        "userAssignedIdentities": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/UserAssignedIdentities"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of user identities associated with the NGroup."
        }
      },
      "description": "Identity for the NGroup."
    },
    "NGroupProperties": {
      "type": "object",
      "properties": {
        "containerGroupProfiles": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContainerGroupProfileStub"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Container Group Profiles that could be used in the NGroups resource."
        },
        "elasticProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/ElasticProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the elastic profile of the NGroup"
        },
        "placementProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/PlacementProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Provides options w.r.t allocation and management w.r.t certain placement policies. These utilize capabilities provided by the underlying Azure infrastructure. They are typically used for high availability scenarios. E.g., distributing CGs across fault domains."
        },
        "updateProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/UpdateProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Used by the customer to specify the way to update the Container Groups in NGroup."
        }
      },
      "description": "Describes the properties of the NGroups resource."
    },
    "PlacementProfile": {
      "type": "object",
      "properties": {
        "faultDomainCount": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The number of fault domains to be used to spread CGs in the NGroups resource. This can only be specified during NGroup creation and is immutable after that."
        }
      },
      "description": "Provides options w.r.t allocation and management w.r.t certain placement policies. These utilize capabilities provided by the underlying Azure infrastructure. They are typically used for high availability scenarios. E.g., distributing CGs across fault domains."
    },
    "Port": {
      "type": "object",
      "properties": {
        "port": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The port number."
        },
        "protocol": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "TCP",
                "UDP"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The protocol associated with the port."
        }
      },
      "required": [
        "port"
      ],
      "description": "The port exposed on the container group."
    },
    "ResourceLimits": {
      "type": "object",
      "properties": {
        "cpu": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The CPU limit of this container instance."
        },
        "gpu": {
          "oneOf": [
            {
              "$ref": "#/definitions/GpuResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The GPU resource."
        },
        "memoryInGB": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The memory limit in GB of this container instance."
        }
      },
      "description": "The resource limits."
    },
    "ResourceRequests": {
      "type": "object",
      "properties": {
        "cpu": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The CPU request of this container instance."
        },
        "gpu": {
          "oneOf": [
            {
              "$ref": "#/definitions/GpuResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The GPU resource."
        },
        "memoryInGB": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The memory request in GB of this container instance."
        }
      },
      "required": [
        "cpu",
        "memoryInGB"
      ],
      "description": "The resource requests."
    },
    "ResourceRequirements": {
      "type": "object",
      "properties": {
        "limits": {
          "oneOf": [
            {
              "$ref": "#/definitions/ResourceLimits"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The resource limits."
        },
        "requests": {
          "oneOf": [
            {
              "$ref": "#/definitions/ResourceRequests"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The resource requests."
        }
      },
      "required": [
        "requests"
      ],
      "description": "The resource requirements."
    },
    "SecretReference": {
      "type": "object",
      "properties": {
        "identity": {
          "type": "string",
          "format": "arm-id",
          "description": "The ARM resource id of the managed identity that has access to the secret in the key vault"
        },
        "name": {
          "type": "string",
          "description": "The identifier of the secret reference"
        },
        "secretReferenceUri": {
          "type": "string",
          "format": "uri",
          "description": "The URI to the secret in key vault"
        }
      },
      "required": [
        "identity",
        "name",
        "secretReferenceUri"
      ],
      "description": "A secret reference"
    },
    "SecurityContextCapabilitiesDefinition": {
      "type": "object",
      "properties": {
        "add": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The capabilities to add to the container."
        },
        "drop": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The capabilities to drop from the container."
        }
      },
      "description": "The capabilities to add or drop from a container."
    },
    "SecurityContextDefinition": {
      "type": "object",
      "properties": {
        "allowPrivilegeEscalation": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A boolean value indicating whether the init process can elevate its privileges"
        },
        "capabilities": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecurityContextCapabilitiesDefinition"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The capabilities to add or drop from a container."
        },
        "privileged": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The flag to determine if the container permissions is elevated to Privileged."
        },
        "runAsGroup": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sets the User GID for the container."
        },
        "runAsUser": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sets the User UID for the container."
        },
        "seccompProfile": {
          "type": "string",
          "description": "a base64 encoded string containing the contents of the JSON in the seccomp profile"
        }
      },
      "description": "The security context for the container."
    },
    "StorageProfile": {
      "type": "object",
      "properties": {
        "fileShares": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FileShare"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "description": "Storage profile for storage related settings of a container group profile."
    },
    "UpdateProfile": {
      "type": "object",
      "properties": {
        "rollingUpdateProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/UpdateProfileRollingUpdateProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This profile allows the customers to customize the rolling update."
        },
        "updateMode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Manual",
                "Rolling"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "description": "Used by the customer to specify the way to update the Container Groups in NGroup."
    },
    "UpdateProfileRollingUpdateProfile": {
      "type": "object",
      "properties": {
        "inPlaceUpdate": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Default is false. If set to true, the CGs will be updated in-place instead of creating new CG and deleting old ones."
        },
        "maxBatchPercent": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Maximum percentage of total Container Groups which can be updated simultaneously by rolling update in one batch."
        },
        "maxUnhealthyPercent": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Maximum percentage of the updated Container Groups which can be in unhealthy state after each batch is updated."
        },
        "pauseTimeBetweenBatches": {
          "type": "string",
          "description": "The wait time between batches after completing the one batch of the rolling update and starting the next batch. The time duration should be specified in ISO 8601 format for duration."
        }
      },
      "description": "This profile allows the customers to customize the rolling update."
    },
    "UserAssignedIdentities": {
      "type": "object",
      "properties": {},
      "description": "The list of user identities associated with the container group. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
    },
    "Volume": {
      "type": "object",
      "properties": {
        "azureFile": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureFileVolume"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of the Azure File volume. Azure File shares are mounted as volumes."
        },
        "emptyDir": {
          "type": "object",
          "properties": {},
          "description": "The empty directory volume."
        },
        "gitRepo": {
          "oneOf": [
            {
              "$ref": "#/definitions/GitRepoVolume"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Represents a volume that is populated with the contents of a git repository"
        },
        "name": {
          "type": "string",
          "description": "The name of the volume."
        },
        "secret": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The secret volume."
        },
        "secretReference": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The secret reference volume."
        }
      },
      "required": [
        "name"
      ],
      "description": "The properties of the volume."
    },
    "VolumeMount": {
      "type": "object",
      "properties": {
        "mountPath": {
          "type": "string",
          "description": "The path within the container where the volume should be mounted. Must not contain colon (:)."
        },
        "name": {
          "type": "string",
          "description": "The name of the volume mount."
        },
        "readOnly": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The flag indicating whether the volume mount is read-only."
        }
      },
      "required": [
        "mountPath",
        "name"
      ],
      "description": "The properties of the volume mount."
    }
  }
}